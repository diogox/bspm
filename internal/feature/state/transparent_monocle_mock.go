// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/diogox/bspm/internal/feature/state (interfaces: TransparentMonocle)

// Package state is a generated GoMock package.
package state

import (
	bspc_go "github.com/diogox/bspc-go"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockTransparentMonocle is a mock of TransparentMonocle interface
type MockTransparentMonocle struct {
	ctrl     *gomock.Controller
	recorder *MockTransparentMonocleMockRecorder
}

// MockTransparentMonocleMockRecorder is the mock recorder for MockTransparentMonocle
type MockTransparentMonocleMockRecorder struct {
	mock *MockTransparentMonocle
}

// NewMockTransparentMonocle creates a new mock instance
func NewMockTransparentMonocle(ctrl *gomock.Controller) *MockTransparentMonocle {
	mock := &MockTransparentMonocle{ctrl: ctrl}
	mock.recorder = &MockTransparentMonocleMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTransparentMonocle) EXPECT() *MockTransparentMonocleMockRecorder {
	return m.recorder
}

// Delete mocks base method
func (m *MockTransparentMonocle) Delete(arg0 bspc_go.ID) (TransparentMonocleState, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0)
	ret0, _ := ret[0].(TransparentMonocleState)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Delete indicates an expected call of Delete
func (mr *MockTransparentMonocleMockRecorder) Delete(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockTransparentMonocle)(nil).Delete), arg0)
}

// Get mocks base method
func (m *MockTransparentMonocle) Get(arg0 bspc_go.ID) (TransparentMonocleState, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0)
	ret0, _ := ret[0].(TransparentMonocleState)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get
func (mr *MockTransparentMonocleMockRecorder) Get(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockTransparentMonocle)(nil).Get), arg0)
}

// Set mocks base method
func (m *MockTransparentMonocle) Set(arg0 bspc_go.ID, arg1 TransparentMonocleState) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Set", arg0, arg1)
}

// Set indicates an expected call of Set
func (mr *MockTransparentMonocleMockRecorder) Set(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Set", reflect.TypeOf((*MockTransparentMonocle)(nil).Set), arg0, arg1)
}
