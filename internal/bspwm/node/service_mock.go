// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/diogox/bspm/internal/bspwm/node (interfaces: Service)

// Package bspwmnode is a generated GoMock package.
package bspwmnode

import (
	bspc "github.com/diogox/bspc-go"
	filter "github.com/diogox/bspm/internal/bspwm/filter"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockService is a mock of Service interface
type MockService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMockRecorder
}

// MockServiceMockRecorder is the mock recorder for MockService
type MockServiceMockRecorder struct {
	mock *MockService
}

// NewMockService creates a new mock instance
func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &MockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockService) EXPECT() *MockServiceMockRecorder {
	return m.recorder
}

// Get mocks base method
func (m *MockService) Get(arg0 filter.NodeFilter) (bspc.Node, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0)
	ret0, _ := ret[0].(bspc.Node)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get
func (mr *MockServiceMockRecorder) Get(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockService)(nil).Get), arg0)
}

// SetVisibility mocks base method
func (m *MockService) SetVisibility(arg0 bspc.ID, arg1 bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetVisibility", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetVisibility indicates an expected call of SetVisibility
func (mr *MockServiceMockRecorder) SetVisibility(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetVisibility", reflect.TypeOf((*MockService)(nil).SetVisibility), arg0, arg1)
}
